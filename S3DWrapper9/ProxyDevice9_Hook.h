#include "stdafx.h"

namespace IDirect3DDevice9MethodNames
{
	// IUnknown methods
	PROXYSTDMETHOD(QueryInterface)(IDirect3DDevice9* pDevice, REFIID riid, void** ppvObj);
	PROXYSTDMETHOD_(ULONG,AddRef)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD_(ULONG,Release)(IDirect3DDevice9* pDevice);

	// IDirect3DDevice9 methods
	PROXYSTDMETHOD(TestCooperativeLevel)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD_(UINT, GetAvailableTextureMem)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(EvictManagedResources)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(GetDirect3D)(IDirect3DDevice9* pDevice, IDirect3D9** ppD3D9);
	PROXYSTDMETHOD(GetDeviceCaps)(IDirect3DDevice9* pDevice, D3DCAPS9* pCaps);
	PROXYSTDMETHOD(GetDisplayMode)(IDirect3DDevice9* pDevice, UINT iSwapChain,D3DDISPLAYMODE* pMode);
	PROXYSTDMETHOD(GetCreationParameters)(IDirect3DDevice9* pDevice, D3DDEVICE_CREATION_PARAMETERS *pParameters);
	PROXYSTDMETHOD(SetCursorProperties)(IDirect3DDevice9* pDevice, UINT XHotSpot,UINT YHotSpot,IDirect3DSurface9* pCursorBitmap);
	PROXYSTDMETHOD_(void, SetCursorPosition)(IDirect3DDevice9* pDevice, int X,int Y,DWORD Flags);
	PROXYSTDMETHOD_(BOOL, ShowCursor)(IDirect3DDevice9* pDevice, BOOL bShow);
	PROXYSTDMETHOD(CreateAdditionalSwapChain)(IDirect3DDevice9* pDevice, D3DPRESENT_PARAMETERS* pPresentationParameters,IDirect3DSwapChain9** pSwapChain);
	PROXYSTDMETHOD(GetSwapChain)(IDirect3DDevice9* pDevice, UINT iSwapChain,IDirect3DSwapChain9** pSwapChain);
	PROXYSTDMETHOD_(UINT, GetNumberOfSwapChains)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(Reset)(IDirect3DDevice9* pDevice, D3DPRESENT_PARAMETERS* pPresentationParameters);
	PROXYSTDMETHOD(Present)(IDirect3DDevice9* pDevice, CONST RECT* pSourceRect,CONST RECT* pDestRect,HWND hDestWindowOverride,CONST RGNDATA* pDirtyRegion);
	PROXYSTDMETHOD(GetBackBuffer)(IDirect3DDevice9* pDevice, UINT iSwapChain,UINT iBackBuffer,D3DBACKBUFFER_TYPE Type,IDirect3DSurface9** ppBackBuffer);
	PROXYSTDMETHOD(GetRasterStatus)(IDirect3DDevice9* pDevice, UINT iSwapChain,D3DRASTER_STATUS* pRasterStatus);
	PROXYSTDMETHOD(SetDialogBoxMode)(IDirect3DDevice9* pDevice, BOOL bEnableDialogs);
	PROXYSTDMETHOD_(void, SetGammaRamp)(IDirect3DDevice9* pDevice, UINT iSwapChain,DWORD Flags,CONST D3DGAMMARAMP* pRamp);
	PROXYSTDMETHOD_(void, GetGammaRamp)(IDirect3DDevice9* pDevice, UINT iSwapChain,D3DGAMMARAMP* pRamp);
	PROXYSTDMETHOD(CreateTexture)(IDirect3DDevice9* pDevice, UINT Width,UINT Height,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DTexture9** ppTexture,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateVolumeTexture)(IDirect3DDevice9* pDevice, UINT Width,UINT Height,UINT Depth,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DVolumeTexture9** ppVolumeTexture,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateCubeTexture)(IDirect3DDevice9* pDevice, UINT EdgeLength,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DCubeTexture9** ppCubeTexture,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateVertexBuffer)(IDirect3DDevice9* pDevice, UINT Length,DWORD Usage,DWORD FVF,D3DPOOL Pool,IDirect3DVertexBuffer9** ppVertexBuffer,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateIndexBuffer)(IDirect3DDevice9* pDevice, UINT Length,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DIndexBuffer9** ppIndexBuffer,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateRenderTarget)(IDirect3DDevice9* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Lockable,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(CreateDepthStencilSurface)(IDirect3DDevice9* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Discard,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(UpdateSurface)(IDirect3DDevice9* pDevice, IDirect3DSurface9* pSourceSurface,CONST RECT* pSourceRect,IDirect3DSurface9* pDestinationSurface,CONST POINT* pDestPoint);
	PROXYSTDMETHOD(UpdateTexture)(IDirect3DDevice9* pDevice, IDirect3DBaseTexture9* pSourceTexture,IDirect3DBaseTexture9* pDestinationTexture);
	PROXYSTDMETHOD(GetRenderTargetData)(IDirect3DDevice9* pDevice, IDirect3DSurface9* pRenderTarget,IDirect3DSurface9* pDestSurface);
	PROXYSTDMETHOD(GetFrontBufferData)(IDirect3DDevice9* pDevice, UINT iSwapChain,IDirect3DSurface9* pDestSurface);
	PROXYSTDMETHOD(StretchRect)(IDirect3DDevice9* pDevice, IDirect3DSurface9* pSourceSurface,CONST RECT* pSourceRect,IDirect3DSurface9* pDestSurface,CONST RECT* pDestRect,D3DTEXTUREFILTERTYPE Filter);
	PROXYSTDMETHOD(ColorFill)(IDirect3DDevice9* pDevice, IDirect3DSurface9* pSurface,CONST RECT* pRect,D3DCOLOR color);
	PROXYSTDMETHOD(CreateOffscreenPlainSurface)(IDirect3DDevice9* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DPOOL Pool,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle);
	PROXYSTDMETHOD(SetRenderTarget)(IDirect3DDevice9* pDevice, DWORD RenderTargetIndex,IDirect3DSurface9* pRenderTarget);
	PROXYSTDMETHOD(GetRenderTarget)(IDirect3DDevice9* pDevice, DWORD RenderTargetIndex,IDirect3DSurface9** ppRenderTarget);
	PROXYSTDMETHOD(SetDepthStencilSurface)(IDirect3DDevice9* pDevice, IDirect3DSurface9* pNewZStencil);
	PROXYSTDMETHOD(GetDepthStencilSurface)(IDirect3DDevice9* pDevice, IDirect3DSurface9** ppZStencilSurface);
	PROXYSTDMETHOD(BeginScene)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(EndScene)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(Clear)(IDirect3DDevice9* pDevice, DWORD Count,CONST D3DRECT* pRects,DWORD Flags,D3DCOLOR Color,float Z,DWORD Stencil);
//	PROXYSTDMETHOD(SetTransform)(IDirect3DDevice9* pDevice, D3DTRANSFORMSTATETYPE State,CONST D3DMATRIX* pMatrix);
	PROXYSTDMETHOD(GetTransform)(IDirect3DDevice9* pDevice, D3DTRANSFORMSTATETYPE State,D3DMATRIX* pMatrix);
//	PROXYSTDMETHOD(MultiplyTransform)(IDirect3DDevice9* pDevice, D3DTRANSFORMSTATETYPE,CONST D3DMATRIX*);
//	PROXYSTDMETHOD(SetViewport)(IDirect3DDevice9* pDevice, CONST D3DVIEWPORT9* pViewport);
	PROXYSTDMETHOD(GetViewport)(IDirect3DDevice9* pDevice, D3DVIEWPORT9* pViewport);
	PROXYSTDMETHOD(SetMaterial)(IDirect3DDevice9* pDevice, CONST D3DMATERIAL9* pMaterial);
	PROXYSTDMETHOD(GetMaterial)(IDirect3DDevice9* pDevice, D3DMATERIAL9* pMaterial);
	PROXYSTDMETHOD(SetLight)(IDirect3DDevice9* pDevice, DWORD Index,CONST D3DLIGHT9* pLight);
	PROXYSTDMETHOD(GetLight)(IDirect3DDevice9* pDevice, DWORD Index,D3DLIGHT9* pLight);
	PROXYSTDMETHOD(LightEnable)(IDirect3DDevice9* pDevice, DWORD Index,BOOL Enable);
	PROXYSTDMETHOD(GetLightEnable)(IDirect3DDevice9* pDevice, DWORD Index,BOOL* pEnable);
	PROXYSTDMETHOD(SetClipPlane)(IDirect3DDevice9* pDevice, DWORD Index,CONST float* pPlane);
	PROXYSTDMETHOD(GetClipPlane)(IDirect3DDevice9* pDevice, DWORD Index,float* pPlane);
//	PROXYSTDMETHOD(SetRenderState)(IDirect3DDevice9* pDevice, D3DRENDERSTATETYPE State,DWORD Value);
	PROXYSTDMETHOD(GetRenderState)(IDirect3DDevice9* pDevice, D3DRENDERSTATETYPE State,DWORD* pValue);
	PROXYSTDMETHOD(CreateStateBlock)(IDirect3DDevice9* pDevice, D3DSTATEBLOCKTYPE Type,IDirect3DStateBlock9** ppSB);
	PROXYSTDMETHOD(BeginStateBlock)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(EndStateBlock)(IDirect3DDevice9* pDevice, IDirect3DStateBlock9** ppSB);
	PROXYSTDMETHOD(SetClipStatus)(IDirect3DDevice9* pDevice, CONST D3DCLIPSTATUS9* pClipStatus);
	PROXYSTDMETHOD(GetClipStatus)(IDirect3DDevice9* pDevice, D3DCLIPSTATUS9* pClipStatus);
	PROXYSTDMETHOD(GetTexture)(IDirect3DDevice9* pDevice, DWORD Stage,IDirect3DBaseTexture9** ppTexture);
//	PROXYSTDMETHOD(SetTexture)(IDirect3DDevice9* pDevice, DWORD Stage,IDirect3DBaseTexture9* pTexture);
	PROXYSTDMETHOD(GetTextureStageState)(IDirect3DDevice9* pDevice, DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD* pValue);
	PROXYSTDMETHOD(SetTextureStageState)(IDirect3DDevice9* pDevice, DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD Value);
	PROXYSTDMETHOD(GetSamplerState)(IDirect3DDevice9* pDevice, DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD* pValue);
	PROXYSTDMETHOD(SetSamplerState)(IDirect3DDevice9* pDevice, DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD Value);
	PROXYSTDMETHOD(ValidateDevice)(IDirect3DDevice9* pDevice, DWORD* pNumPasses);
	PROXYSTDMETHOD(SetPaletteEntries)(IDirect3DDevice9* pDevice, UINT PaletteNumber,CONST PALETTEENTRY* pEntries);
	PROXYSTDMETHOD(GetPaletteEntries)(IDirect3DDevice9* pDevice, UINT PaletteNumber,PALETTEENTRY* pEntries);
	PROXYSTDMETHOD(SetCurrentTexturePalette)(IDirect3DDevice9* pDevice, UINT PaletteNumber);
	PROXYSTDMETHOD(GetCurrentTexturePalette)(IDirect3DDevice9* pDevice, UINT *PaletteNumber);
//	PROXYSTDMETHOD(SetScissorRect)(IDirect3DDevice9* pDevice, CONST RECT* pRect);
	PROXYSTDMETHOD(GetScissorRect)(IDirect3DDevice9* pDevice, RECT* pRect);
	PROXYSTDMETHOD(SetSoftwareVertexProcessing)(IDirect3DDevice9* pDevice, BOOL bSoftware);
	PROXYSTDMETHOD_(BOOL, GetSoftwareVertexProcessing)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(SetNPatchMode)(IDirect3DDevice9* pDevice, float nSegments);
	PROXYSTDMETHOD_(float, GetNPatchMode)(IDirect3DDevice9* pDevice);
	PROXYSTDMETHOD(DrawPrimitive)(IDirect3DDevice9* pDevice, D3DPRIMITIVETYPE PrimitiveType,UINT StartVertex,UINT PrimitiveCount);
	PROXYSTDMETHOD(DrawIndexedPrimitive)(IDirect3DDevice9* pDevice, D3DPRIMITIVETYPE PrimitiveType,INT BaseVertexIndex,UINT MinVertexIndex,UINT NumVertices,UINT startIndex,UINT primCount);
	PROXYSTDMETHOD(DrawPrimitiveUP)(IDirect3DDevice9* pDevice, D3DPRIMITIVETYPE PrimitiveType,UINT PrimitiveCount,CONST void* pVertexStreamZeroData,UINT VertexStreamZeroStride);
	PROXYSTDMETHOD(DrawIndexedPrimitiveUP)(IDirect3DDevice9* pDevice, D3DPRIMITIVETYPE PrimitiveType,UINT MinVertexIndex,UINT NumVertices,UINT PrimitiveCount,CONST void* pIndexData,D3DFORMAT IndexDataFormat,CONST void* pVertexStreamZeroData,UINT VertexStreamZeroStride);
	PROXYSTDMETHOD(ProcessVertices)(IDirect3DDevice9* pDevice, UINT SrcStartIndex,UINT DestIndex,UINT VertexCount,IDirect3DVertexBuffer9* pDestBuffer,IDirect3DVertexDeclaration9* pVertexDecl,DWORD Flags);
	PROXYSTDMETHOD(CreateVertexDeclaration)(IDirect3DDevice9* pDevice, CONST D3DVERTEXELEMENT9* pVertexElements,IDirect3DVertexDeclaration9** ppDecl);
//	PROXYSTDMETHOD(SetVertexDeclaration)(IDirect3DDevice9* pDevice, IDirect3DVertexDeclaration9* pDecl);
	PROXYSTDMETHOD(GetVertexDeclaration)(IDirect3DDevice9* pDevice, IDirect3DVertexDeclaration9** ppDecl);
//	PROXYSTDMETHOD(SetFVF)(IDirect3DDevice9* pDevice, DWORD FVF);
	PROXYSTDMETHOD(GetFVF)(IDirect3DDevice9* pDevice, DWORD* pFVF);
	PROXYSTDMETHOD(CreateVertexShader)(IDirect3DDevice9* pDevice, CONST DWORD* pFunction,IDirect3DVertexShader9** ppShader);
//	PROXYSTDMETHOD(SetVertexShader)(IDirect3DDevice9* pDevice, IDirect3DVertexShader9* pShader);
//	PROXYSTDMETHOD(GetVertexShader)(IDirect3DDevice9* pDevice, IDirect3DVertexShader9** ppShader);
//	PROXYSTDMETHOD(SetVertexShaderConstantF)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST float* pConstantData,UINT Vector4fCount);
//	PROXYSTDMETHOD(GetVertexShaderConstantF)(IDirect3DDevice9* pDevice, UINT StartRegister,float* pConstantData,UINT Vector4fCount);
	PROXYSTDMETHOD(SetVertexShaderConstantI)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST int* pConstantData,UINT Vector4iCount);
	PROXYSTDMETHOD(GetVertexShaderConstantI)(IDirect3DDevice9* pDevice, UINT StartRegister,int* pConstantData,UINT Vector4iCount);
	PROXYSTDMETHOD(SetVertexShaderConstantB)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST BOOL* pConstantData,UINT  BoolCount);
	PROXYSTDMETHOD(GetVertexShaderConstantB)(IDirect3DDevice9* pDevice, UINT StartRegister,BOOL* pConstantData,UINT BoolCount);
//	PROXYSTDMETHOD(SetStreamSource)(IDirect3DDevice9* pDevice, UINT StreamNumber,IDirect3DVertexBuffer9* pStreamData,UINT OffsetInBytes,UINT Stride);
	PROXYSTDMETHOD(GetStreamSource)(IDirect3DDevice9* pDevice, UINT StreamNumber,IDirect3DVertexBuffer9** ppStreamData,UINT* pOffsetInBytes,UINT* pStride);
	PROXYSTDMETHOD(SetStreamSourceFreq)(IDirect3DDevice9* pDevice, UINT StreamNumber,UINT Setting);
	PROXYSTDMETHOD(GetStreamSourceFreq)(IDirect3DDevice9* pDevice, UINT StreamNumber,UINT* pSetting);
	PROXYSTDMETHOD(SetIndices)(IDirect3DDevice9* pDevice, IDirect3DIndexBuffer9* pIndexData);
	PROXYSTDMETHOD(GetIndices)(IDirect3DDevice9* pDevice, IDirect3DIndexBuffer9** ppIndexData);
	PROXYSTDMETHOD(CreatePixelShader)(IDirect3DDevice9* pDevice, CONST DWORD* pFunction,IDirect3DPixelShader9** ppShader);
//	PROXYSTDMETHOD(SetPixelShader)(IDirect3DDevice9* pDevice, IDirect3DPixelShader9* pShader);
	PROXYSTDMETHOD(GetPixelShader)(IDirect3DDevice9* pDevice, IDirect3DPixelShader9** ppShader);
	PROXYSTDMETHOD(SetPixelShaderConstantF)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST float* pConstantData,UINT Vector4fCount);
	PROXYSTDMETHOD(GetPixelShaderConstantF)(IDirect3DDevice9* pDevice, UINT StartRegister,float* pConstantData,UINT Vector4fCount);
	PROXYSTDMETHOD(SetPixelShaderConstantI)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST int* pConstantData,UINT Vector4iCount);
	PROXYSTDMETHOD(GetPixelShaderConstantI)(IDirect3DDevice9* pDevice, UINT StartRegister,int* pConstantData,UINT Vector4iCount);
	PROXYSTDMETHOD(SetPixelShaderConstantB)(IDirect3DDevice9* pDevice, UINT StartRegister,CONST BOOL* pConstantData,UINT  BoolCount);
	PROXYSTDMETHOD(GetPixelShaderConstantB)(IDirect3DDevice9* pDevice, UINT StartRegister,BOOL* pConstantData,UINT BoolCount);
	PROXYSTDMETHOD(DrawRectPatch)(IDirect3DDevice9* pDevice, UINT Handle,CONST float* pNumSegs,CONST D3DRECTPATCH_INFO* pRectPatchInfo);
	PROXYSTDMETHOD(DrawTriPatch)(IDirect3DDevice9* pDevice, UINT Handle,CONST float* pNumSegs,CONST D3DTRIPATCH_INFO* pTriPatchInfo);
	PROXYSTDMETHOD(DeletePatch)(IDirect3DDevice9* pDevice, UINT Handle);
	PROXYSTDMETHOD(CreateQuery)(IDirect3DDevice9* pDevice, D3DQUERYTYPE Type,IDirect3DQuery9** ppQuery);

	// IDirect3DDevice9Ex methods
	PROXYSTDMETHOD(SetConvolutionMonoKernel)(IDirect3DDevice9Ex* pDevice, UINT width,UINT height,float* rows,float* columns);
	PROXYSTDMETHOD(ComposeRects)(IDirect3DDevice9Ex* pDevice, IDirect3DSurface9* pSrc,IDirect3DSurface9* pDst,IDirect3DVertexBuffer9* pSrcRectDescs,UINT NumRects,IDirect3DVertexBuffer9* pDstRectDescs,D3DCOMPOSERECTSOP Operation,int Xoffset,int Yoffset);
	PROXYSTDMETHOD(PresentEx)(IDirect3DDevice9Ex* pDevice, CONST RECT* pSourceRect,CONST RECT* pDestRect,HWND hDestWindowOverride,CONST RGNDATA* pDirtyRegion,DWORD dwFlags);
	PROXYSTDMETHOD(GetGPUThreadPriority)(IDirect3DDevice9Ex* pDevice, INT* pPriority);
	PROXYSTDMETHOD(SetGPUThreadPriority)(IDirect3DDevice9Ex* pDevice, INT Priority);
	PROXYSTDMETHOD(WaitForVBlank)(IDirect3DDevice9Ex* pDevice, UINT iSwapChain);
	PROXYSTDMETHOD(CheckResourceResidency)(IDirect3DDevice9Ex* pDevice, IDirect3DResource9** pResourceArray,UINT32 NumResources);
	PROXYSTDMETHOD(SetMaximumFrameLatency)(IDirect3DDevice9Ex* pDevice, UINT MaxLatency);
	PROXYSTDMETHOD(GetMaximumFrameLatency)(IDirect3DDevice9Ex* pDevice, UINT* pMaxLatency);
	PROXYSTDMETHOD(CheckDeviceState)(IDirect3DDevice9Ex* pDevice, HWND hDestinationWindow);
	PROXYSTDMETHOD(CreateRenderTargetEx)(IDirect3DDevice9Ex* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Lockable,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage);
	PROXYSTDMETHOD(CreateOffscreenPlainSurfaceEx)(IDirect3DDevice9Ex* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DPOOL Pool,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage);
	PROXYSTDMETHOD(CreateDepthStencilSurfaceEx)(IDirect3DDevice9Ex* pDevice, UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Discard,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage);
	PROXYSTDMETHOD(ResetEx)(IDirect3DDevice9Ex* pDevice, D3DPRESENT_PARAMETERS* pPresentationParameters,D3DDISPLAYMODEEX *pFullscreenDisplayMode);
	PROXYSTDMETHOD(GetDisplayModeEx)(IDirect3DDevice9Ex* pDevice, UINT iSwapChain,D3DDISPLAYMODEEX* pMode,D3DDISPLAYROTATION* pRotation);
}